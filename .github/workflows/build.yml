name: Build

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '16.x'

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Build Windows
        run: npm run build:windows
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
      - name: Create Chocolatey package
        run: |
          nuget pack countdown-timer.nuspec -OutputDirectory dist
      - name: Upload Chocolatey package
        uses: actions/upload-artifact@v4
        with:
          name: Chocolatey
          path: dist/CountdownTimer.1.0.0.nupkg
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
        with:
          name: Windows
          path: dist/*.exe
          overwrite: true
      - name: Debug
        run: dir dist
      - name: Push to Chocolatey
        run: choco push dist/CountdownTimer.1.0.0.nupkg --source=https://push.chocolatey.org/ --api-key=${{ secrets.CHOCOKEY }}


  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Build Linux
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
        with:
          name: Linux
          path: dist/*.AppImage
          overwrite: true

  build-mac:
    runs-on: macos-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Build Mac
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
      - name: Upload Mac artifact
        uses: actions/upload-artifact@v4
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
        with:
          name: Mac
          path: dist/*.dmg
          overwrite: true
